import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import cm, colors
from matplotlib.colors import LinearSegmentedColormap
import time
from resistojet_3d import create_3d_visualization, animate_particles, create_temperature_distribution_plot, create_velocity_gradient_plot
import plotly.graph_objects as go

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="3D-—Å–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∑–∏—Å—Ç–æ–¥–∂–µ—Ç–∞",
    page_icon="üöÄ",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("3D-—Å–∏–º—É–ª—è—Ü–∏—è —Ç–µ–ø–ª–æ–≤—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –¥–≤–∏–∂–µ–Ω–∏—è —á–∞—Å—Ç–∏—Ü –≤ —Ä–µ–∑–∏—Å—Ç–æ–¥–∂–µ—Ç–µ")
st.markdown("""
–≠—Ç–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–ø–ª–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –¥–≤–∏–∂–µ–Ω–∏–µ —á–∞—Å—Ç–∏—Ü –≤ —Ä–µ–∑–∏—Å—Ç–∏–≤–Ω–æ–º —Ä–∞–∫–µ—Ç–Ω–æ–º –¥–≤–∏–≥–∞—Ç–µ–ª–µ 
—Å —Ä–µ–≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã–º –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ–º. –í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –Ω–∞–±–ª—é–¥–∞—Ç—å –∏—Ö –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.
""")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
st.sidebar.header("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏")

# –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
st.sidebar.subheader("–ì–µ–æ–º–µ—Ç—Ä–∏—è")
chamber_height = st.sidebar.slider("–í—ã—Å–æ—Ç–∞ –∫–∞–º–µ—Ä—ã (–º–º)", 20.0, 100.0, 40.0, 1.0) / 1000
chamber_inner_radius = st.sidebar.slider("–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–∞–¥–∏—É—Å –∫–∞–º–µ—Ä—ã (–º–º)", 5.0, 25.0, 10.0, 0.5) / 1000
chamber_wall_thickness = st.sidebar.slider("–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–µ–Ω–∫–∏ –∫–∞–º–µ—Ä—ã (–º–º)", 0.5, 5.0, 1.0, 0.1) / 1000
cooling_gap = st.sidebar.slider("–ó–∞–∑–æ—Ä –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è (–º–º)", 0.5, 5.0, 1.0, 0.1) / 1000
cooling_wall_thickness = st.sidebar.slider("–¢–æ–ª—â–∏–Ω–∞ —Å—Ç–µ–Ω–∫–∏ –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π —Ä—É–±–∞—à–∫–∏ (–º–º)", 0.5, 5.0, 1.0, 0.1) / 1000

# –†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
st.sidebar.subheader("–†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
mass_flow_rate = st.sidebar.slider("–ú–∞—Å—Å–æ–≤—ã–π —Ä–∞—Å—Ö–æ–¥ (–≥/—Å)", 0.1, 5.0, 1.0, 0.1) / 1000
pressure = st.sidebar.slider("–î–∞–≤–ª–µ–Ω–∏–µ (–ú–ü–∞)", 0.1, 10.0, 1.0, 0.1) * 1e6
heater_power = st.sidebar.slider("–ú–æ—â–Ω–æ—Å—Ç—å –Ω–∞–≥—Ä–µ–≤–∞—Ç–µ–ª—è (–í—Ç)", 50, 500, 200, 10)
initial_temp = st.sidebar.slider("–ù–∞—á–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ (K)", 100, 500, 300, 10)

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
st.sidebar.subheader("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏")
num_particles = st.sidebar.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–∏—Ü", 10, 100, 50, 5)
animate = st.sidebar.checkbox("–ê–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –¥–≤–∏–∂–µ–Ω–∏–µ —á–∞—Å—Ç–∏—Ü", True)

# –†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏
@st.cache_data
def calculate_model_parameters(chamber_height, chamber_inner_radius, chamber_wall_thickness, 
                              cooling_gap, cooling_wall_thickness, mass_flow_rate, 
                              pressure, heater_power, initial_temp, num_stations=20):
    """
    –†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏ —Ä–µ–∑–∏—Å—Ç–æ–¥–∂–µ—Ç–∞.
    """
    # –†–∞—Å—á–µ—Ç –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    chamber_inner_diameter = 2 * chamber_inner_radius
    chamber_outer_radius = chamber_inner_radius + chamber_wall_thickness
    cooling_jacket_inner_radius = chamber_outer_radius
    cooling_jacket_outer_radius = cooling_jacket_inner_radius + cooling_gap
    shell_inner_radius = cooling_jacket_outer_radius
    shell_outer_radius = shell_inner_radius + cooling_wall_thickness
    
    # –ü–ª–æ—â–∞–¥–∏ –ø–æ–ø–µ—Ä–µ—á–Ω–æ–≥–æ —Å–µ—á–µ–Ω–∏—è
    A_chamber = np.pi * chamber_inner_radius**2
    A_cooling = np.pi * (cooling_jacket_outer_radius**2 - cooling_jacket_inner_radius**2)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–ø–ª–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
    nozzle_profile = np.zeros(num_stations+1)
    for i in range(num_stations+1):
        z_normalized = i / num_stations
        if z_normalized < 0.4:
            # –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —Å—É–∂–µ–Ω–∏–µ
            nozzle_profile[i] = chamber_inner_radius * (1 - 0.3 * (z_normalized / 0.4))
        else:
            # –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å—É–∂–µ–Ω–∏—è
            nozzle_profile[i] = chamber_inner_radius * 0.7 + chamber_inner_radius * 0.8 * ((z_normalized - 0.4) / 0.6)
    
    # –†–∞—Å—á–µ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä (—É–ø—Ä–æ—â–µ–Ω–Ω–æ)
    # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ä–∞–±–æ—á–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏ (–≤–æ–¥–æ—Ä–æ–¥) —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç –≤—Ö–æ–¥–∞ –∫ –≤—ã—Ö–æ–¥—É
    T_chamber_fluid = np.linspace(initial_temp, initial_temp + heater_power / (mass_flow_rate * 14300), num_stations+1)
    
    # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–µ–Ω–∫–∏ –∫–∞–º–µ—Ä—ã –Ω–µ–º–Ω–æ–≥–æ –Ω–∏–∂–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Ä–∞–±–æ—á–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏
    T_chamber_wall = T_chamber_fluid - 50
    
    # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –æ—Ç –≤—Ö–æ–¥–∞ –∫ –≤—ã—Ö–æ–¥—É
    T_cooling_fluid = np.linspace(initial_temp, initial_temp + 200, num_stations+1)
    
    return (nozzle_profile, T_chamber_fluid, T_chamber_wall, T_cooling_fluid, 
            chamber_outer_radius, cooling_jacket_inner_radius, cooling_jacket_outer_radius, 
            shell_inner_radius, shell_outer_radius, A_chamber, A_cooling)

# –†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –º–æ–¥–µ–ª–∏
(nozzle_profile, T_chamber_fluid, T_chamber_wall, T_cooling_fluid, 
 chamber_outer_radius, cooling_jacket_inner_radius, cooling_jacket_outer_radius, 
 shell_inner_radius, shell_outer_radius, A_chamber, A_cooling) = calculate_model_parameters(
    chamber_height, chamber_inner_radius, chamber_wall_thickness, 
    cooling_gap, cooling_wall_thickness, mass_flow_rate, 
    pressure, heater_power, initial_temp
)

# –°–æ–∑–¥–∞–Ω–∏–µ 3D-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
fig = create_3d_visualization(
    chamber_height, chamber_inner_radius, chamber_wall_thickness, 
    cooling_gap, cooling_wall_thickness, nozzle_profile, 
    T_chamber_fluid, T_chamber_wall, T_cooling_fluid
)

# –ê–Ω–∏–º–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è —á–∞—Å—Ç–∏—Ü
if animate:
    fig = animate_particles(fig)

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ 3D-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
st.plotly_chart(fig, use_container_width=True)

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏
st.header("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏")
st.write("""
–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤ —Ä–µ–∑–∏—Å—Ç–æ–¥–∂–µ—Ç–µ. 
–¶–≤–µ—Ç–æ–≤–∞—è —à–∫–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ—Ç–æ–∫–∞ –≤ –º/—Å, –∞ –∫–æ–Ω—Ç—É—Ä–Ω—ã–µ –ª–∏–Ω–∏–∏ - –æ–±–ª–∞—Å—Ç–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é.
""")

velocity_fig = create_velocity_gradient_plot(chamber_height, chamber_inner_radius, nozzle_profile)
st.plotly_chart(velocity_fig, use_container_width=True)

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
st.header("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã")
st.write("""
–ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –≤ —Ä–µ–∑–∏—Å—Ç–æ–¥–∂–µ—Ç–µ.
–¶–≤–µ—Ç–æ–≤–∞—è —à–∫–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –≤ –ö–µ–ª—å–≤–∏–Ω–∞—Ö.
""")

temp_fig = create_temperature_distribution_plot(
    chamber_height, chamber_inner_radius, chamber_wall_thickness, 
    cooling_gap, cooling_wall_thickness, 
    T_chamber_fluid, T_chamber_wall, T_cooling_fluid
)
st.plotly_chart(temp_fig, use_container_width=True)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—è—Å–Ω–µ–Ω–∏—è
st.write("""
### –ü–æ—è—Å–Ω–µ–Ω–∏–µ –∫ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏

#### 3D-–º–æ–¥–µ–ª—å –¥–≤–∏–∂–µ–Ω–∏—è —á–∞—Å—Ç–∏—Ü
–ù–∞ –ª–µ–≤–æ–º –≥—Ä–∞—Ñ–∏–∫–µ –ø–æ–∫–∞–∑–∞–Ω–∞ 3D-–º–æ–¥–µ–ª—å –¥–≤–∏–∂–µ–Ω–∏—è —á–∞—Å—Ç–∏—Ü –≤ —Ä–µ–∑–∏—Å—Ç–æ–¥–∂–µ—Ç–µ:
- **–¶–≤–µ—Ç —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏**: —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —á–∏—Å–ª—É –ú–∞—Ö–∞ (–æ—Ç —Å–∏–Ω–µ–≥–æ –¥–ª—è –¥–æ–∑–≤—É–∫–æ–≤—ã—Ö —Å–∫–æ—Ä–æ—Å—Ç–µ–π –¥–æ –∫—Ä–∞—Å–Ω–æ–≥–æ –¥–ª—è —Å–≤–µ—Ä—Ö–∑–≤—É–∫–æ–≤—ã—Ö)
- **–§–æ—Ä–º–∞ —Å–æ–ø–ª–∞**: –ø–æ–∫–∞–∑–∞–Ω–∞ –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–æ–π —Å–µ—Ä–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å—é
- **–î–≤–∏–∂–µ–Ω–∏–µ —á–∞—Å—Ç–∏—Ü**: —á–∞—Å—Ç–∏—Ü—ã –¥–≤–∏–∂—É—Ç—Å—è –æ—Ç –≤—Ö–æ–¥–∞ –∫ –≤—ã—Ö–æ–¥—É —Å–æ–ø–ª–∞, —É—Å–∫–æ—Ä—è—è—Å—å –≤ —Å—É–∂–∞—é—â–µ–π—Å—è —á–∞—Å—Ç–∏

#### –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞ –ú–∞—Ö–∞
–ù–∞ –ø—Ä–∞–≤–æ–º –≥—Ä–∞—Ñ–∏–∫–µ –ø–æ–∫–∞–∑–∞–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —á–∏—Å–ª–∞ –ú–∞—Ö–∞ –≤ –æ—Å–µ–≤–æ–º —Å–µ—á–µ–Ω–∏–∏:
- **–°–∏–Ω–∏–π —Ü–≤–µ—Ç**: –¥–æ–∑–≤—É–∫–æ–≤–æ–π –ø–æ—Ç–æ–∫ (M < 1)
- **–ó–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç**: –æ–∫–æ–ª–æ–∑–≤—É–∫–æ–≤–æ–π –ø–æ—Ç–æ–∫ (M ‚âà 1)
- **–ñ–µ–ª—Ç—ã–π/–æ—Ä–∞–Ω–∂–µ–≤—ã–π —Ü–≤–µ—Ç**: —Å–≤–µ—Ä—Ö–∑–≤—É–∫–æ–≤–æ–π –ø–æ—Ç–æ–∫ (1 < M < 3)
- **–ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç**: –≤—ã—Å–æ–∫–æ—Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–π —Å–≤–µ—Ä—Ö–∑–≤—É–∫–æ–≤–æ–π –ø–æ—Ç–æ–∫ (M > 3)

–ö–æ–Ω—Ç—É—Ä–Ω—ã–µ –ª–∏–Ω–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –æ–±–ª–∞—Å—Ç–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º —á–∏—Å–ª–æ–º –ú–∞—Ö–∞, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª—É—á—à–µ –≤–∏–¥–µ—Ç—å –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã.
""")

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –º–æ–¥–µ–ª–∏
st.write("""
### –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏

#### –ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
- –í—ã—Å–æ—Ç–∞ –∫–∞–º–µ—Ä—ã: {:.1f} –º–º
- –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–∞–¥–∏—É—Å –∫–∞–º–µ—Ä—ã: {:.1f} –º–º
- –¢–æ–ª—â–∏–Ω–∞ —Å—Ç–µ–Ω–∫–∏ –∫–∞–º–µ—Ä—ã: {:.1f} –º–º
- –ó–∞–∑–æ—Ä –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è: {:.1f} –º–º
- –¢–æ–ª—â–∏–Ω–∞ —Å—Ç–µ–Ω–∫–∏ –æ—Ö–ª–∞–∂–¥–∞—é—â–µ–π —Ä—É–±–∞—à–∫–∏: {:.1f} –º–º

#### –†–∞–±–æ—á–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
- –ú–∞—Å—Å–æ–≤—ã–π —Ä–∞—Å—Ö–æ–¥: {:.1f} –≥/—Å
- –î–∞–≤–ª–µ–Ω–∏–µ: {:.1f} –ú–ü–∞
- –ú–æ—â–Ω–æ—Å—Ç—å –Ω–∞–≥—Ä–µ–≤–∞—Ç–µ–ª—è: {:.0f} –í—Ç
- –ù–∞—á–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {:.0f} K

#### –†–∞—Å—á–µ—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ä–∞–±–æ—á–µ–π –∂–∏–¥–∫–æ—Å—Ç–∏: {:.0f} K
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å—Ç–µ–Ω–∫–∏: {:.0f} K
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ú–∞—Ö–∞: {:.1f}
""".format(
    chamber_height*1000, chamber_inner_radius*1000, chamber_wall_thickness*1000,
    cooling_gap*1000, cooling_wall_thickness*1000,
    mass_flow_rate*1000, pressure/1e6, heater_power, initial_temp,
    np.max(T_chamber_fluid), np.max(T_chamber_wall), 3.7
))

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
st.sidebar.markdown("""
### –û –ø—Ä–æ–µ–∫—Ç–µ
–≠—Ç–∞ –º–æ–¥–µ–ª—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç 3D-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é –¥–≤–∏–∂–µ–Ω–∏—è —á–∞—Å—Ç–∏—Ü –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —á–∏—Å–ª–∞ –ú–∞—Ö–∞ –≤ —Ä–µ–∑–∏—Å—Ç–æ–¥–∂–µ—Ç–µ.

–ú–æ–¥–µ–ª—å —É—á–∏—Ç—ã–≤–∞–µ—Ç:
- –ì–µ–æ–º–µ—Ç—Ä–∏—é —Å–æ–ø–ª–∞
- –¢–µ–ø–ª–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
- –£—Å–∫–æ—Ä–µ–Ω–∏–µ –ø–æ—Ç–æ–∫–∞
- –ò–∑–º–µ–Ω–µ–Ω–∏–µ —á–∏—Å–ª–∞ –ú–∞—Ö–∞

–î–ª—è –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é –º–æ–¥–µ–ª—å.
""") 